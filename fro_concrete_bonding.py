# -*- coding: utf-8 -*-
"""fro concrete bonding.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gSFytsaRPfy2uyfK_LzNAg7gDZ1nUz-6
"""

import pandas as pd

import numpy as np

import matplotlib.pyplot as plt

import seaborn as sns

df = pd.read_csv('/content/concrete_data.csv')
df

df.info()

df.describe()

df.isnull().sum()

sns.pairplot(df)

plt.figure(figsize=[17,8])
sns.heatmap(df.corr(),annot=True)

df.columns

# independent variables
x = df.drop(['concrete_compressive_strength'],axis=1)
# dependent variables
y = df['concrete_compressive_strength']

from sklearn.model_selection import train_test_split
xtrain,xtest,ytrain,ytest= train_test_split(x,y,test_size=0.3,random_state=42)

from sklearn.ensemble import AdaBoostRegressor
adb = AdaBoostRegressor()
adb.fit(x,y)
adb.score(x,y)

from sklearn.ensemble import GradientBoostingRegressor
gbr= GradientBoostingRegressor()
gbr.fit(x,y)
gbr.score(x,y)

import xgboost as xgb
xgb=xgb.XGBRegressor()
xgb.fit(x,y)
xgb.score(x,y)

!pip install catboost

from catboost import CatBoostRegressor
cat=CatBoostRegressor(loss_function='RMSE')
cat.fit(x,y,eval_set=(x,y),plot=True)
cat.score(x,y)

import joblib
joblib.dump(cat, "concrete_compressive_strength_predictor.pkl")

load_model=joblib.load("concrete_compressive_strength_predictor.pkl")
result=load_model.score(x,y)
result